// Generated by Dagger (https://dagger.dev).
package com.quocanle.jetpacknoteapp.di;

import com.quocanle.jetpacknoteapp.data.NoteDatabase;
import com.quocanle.jetpacknoteapp.data.NoteDatabaseDao;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class AppModule_ProvideNotesDaoFactory implements Factory<NoteDatabaseDao> {
  private final Provider<NoteDatabase> noteDatabaseProvider;

  public AppModule_ProvideNotesDaoFactory(Provider<NoteDatabase> noteDatabaseProvider) {
    this.noteDatabaseProvider = noteDatabaseProvider;
  }

  @Override
  public NoteDatabaseDao get() {
    return provideNotesDao(noteDatabaseProvider.get());
  }

  public static AppModule_ProvideNotesDaoFactory create(
      Provider<NoteDatabase> noteDatabaseProvider) {
    return new AppModule_ProvideNotesDaoFactory(noteDatabaseProvider);
  }

  public static NoteDatabaseDao provideNotesDao(NoteDatabase noteDatabase) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideNotesDao(noteDatabase));
  }
}
